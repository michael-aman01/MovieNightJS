[{"/home/michael/MovieNightJS/movie_night_js/pages/api/search.js":"1","/home/michael/MovieNightJS/movie_night_js/pages/index.js":"2","/home/michael/MovieNightJS/movie_night_js/components/App/index.js":"3","/home/michael/MovieNightJS/movie_night_js/components/BookmarkIndexItem/index.js":"4","/home/michael/MovieNightJS/movie_night_js/components/BookmarksIndex/index.js":"5","/home/michael/MovieNightJS/movie_night_js/components/HeaderBar/index.js":"6","/home/michael/MovieNightJS/movie_night_js/components/MovieIndexItem/index.js":"7","/home/michael/MovieNightJS/movie_night_js/components/MoviesIndex/index.js":"8","/home/michael/MovieNightJS/movie_night_js/components/Searchbar/index.js":"9"},{"size":1586,"mtime":1683790296928,"results":"10","hashOfConfig":"11"},{"size":624,"mtime":1683787419446,"results":"12","hashOfConfig":"11"},{"size":1150,"mtime":1683787419510,"results":"13","hashOfConfig":"11"},{"size":1817,"mtime":1683787556014,"results":"14","hashOfConfig":"11"},{"size":1984,"mtime":1683789146302,"results":"15","hashOfConfig":"11"},{"size":1158,"mtime":1683785525994,"results":"16","hashOfConfig":"11"},{"size":3840,"mtime":1683787590942,"results":"17","hashOfConfig":"11"},{"size":1306,"mtime":1683785006289,"results":"18","hashOfConfig":"11"},{"size":1860,"mtime":1683790236847,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"k473pb",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"/home/michael/MovieNightJS/movie_night_js/pages/api/search.js",["55"],[],"//data fetch api here with getSer\n\n\n\n\n  export default async function handler(req, res){\n    const baseUrl = process.env.REACT_APP_API_BASE\n    const title = JSON.parse(req.body).title\n    const query = `?s=${title.toLowerCase().split(\" \").join(\"%20\")}&r=json`\n    const url = `${baseUrl}${query}`\n    console.log(url)\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"content-type\": 'application/octet-stream',\n        \"X-RapidAPI-Key\": process.env.REACT_APP_API_KEY,\n        \"X-RapidAPI-Host\": process.env.REACT_APP_API_HOST\n      }\n    }\n\n    const reqData = await fetch(url, options) //initial fetch to get IMDB ids for possible results\n\n    if(reqData.status == 200){\n              const data = await reqData.json()\n              return requestIMDB(res, data)\n      }else{\n        return res.status(200).json([])\n      }\n\n  }\n\n  async function requestIMDB(responseObject, moviesJSONData){\n    const baseUrl = process.env.REACT_APP_API_BASE\n    const movieURLs = moviesJSONData.Search.map(movie => `${baseUrl}?r=json&i=${movie.imdbID}`)\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"content-type\": 'application/octet-stream',\n        \"X-RapidAPI-Key\": process.env.REACT_APP_API_KEY,\n        \"X-RapidAPI-Host\": process.env.REACT_APP_API_HOST\n      }\n    }\n    \n    const movieDetails = await Promise.all(await movieURLs.map(async url => {\n      const req = await fetch(url, options)\n      const data = await req.json()\n\n      return data\n    }));\n\n    console.log(movieDetails)\n    return responseObject.status(200).json(movieDetails)\n  }\n  ","/home/michael/MovieNightJS/movie_night_js/pages/index.js",["56"],[],"import React from \"react\";\nimport App from \"../components/App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Provider } from 'react-redux';\nimport configureStore from '../store/index';\nimport { useDispatch } from 'react-redux';\n\n\nexport default function Main(){\n  let store = configureStore({});\n// if (process.env.NODE_ENV !== 'production') {\n//   window.store = store;\n//   window.storage = sessionStorage\n//   window.sessionActions = sessionActions;\n// }\n\n  return (\n    <>\n    <Provider store={store}>\n\n    <ChakraProvider>\n      <App></App>\n    </ChakraProvider>\n          \n    </Provider>\n\n    </>\n  )\n}","/home/michael/MovieNightJS/movie_night_js/components/App/index.js",["57","58","59","60","61","62","63","64","65","66","67","68","69","70","71"],[],"import HeaderBar from \"../HeaderBar\";\n\nimport React from \"react\";\nimport {useState, useEffect} from \"react\"\nimport MoviesIndexItem from \"../MovieIndexItem\";\nimport {  Button, Grid, GridItem, Text, Box, Flex, Container } from '@chakra-ui/react'\nimport Searchbar from \"../Searchbar\";\nimport MoviesIndex from \"../MoviesIndex\";\nimport BookmarksIndex  from \"../BookmarksIndex\";\nimport { useSelector } from \"react-redux\";\nimport { loadBookmarks } from \"../../store/bookmarks\";\nimport styles from \"./app.module.css\"\nexport default function App(){\n  const [showBookmarks, setShowBookmarks] = useState(false)\n\n  const bookmarks = useSelector(state => state.bookmarks)\n  const [latestBookmarks,  setLatestBookmarks] = useState(bookmarks.current)\n  // useEffect(() => {\n  //   let updatedBookmarks = loadBookmarks()\n  //   setLatestBookmarks(updatedBookmarks)\n\n  // },[bookmarks])\n\n\n    return(\n        <>\n    <Flex className={styles.app_container} minHeight=\"100vh\" width=\"100vw\" height=\"100vh\" backgroundColor=\"#6a52ff4d\" flexDirection=\"column\">\n    <HeaderBar></HeaderBar>\n      \n      <MoviesIndex></MoviesIndex>\n    </Flex>\n\n\n\n    \n\n\n\n\n\n        </>\n    )\n}","/home/michael/MovieNightJS/movie_night_js/components/BookmarkIndexItem/index.js",["72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88"],[],"import React from \"react\";\nimport {useState,useEffect} from \"react\"\nimport {Card, Flex, Tag, Tab, TabList, Tabs, TabIndicator, TabPanels , TabPanel, Stack, Heading, AspectRatio, CardBody, CardFooter, Button, Image, CardHeader, Text,Box,  VStack, StackDivider, Container, Divider, Center} from \"@chakra-ui/react\"\nimport { useDispatch } from \"react-redux\";\nimport { removeBookmark } from \"../../store/bookmarks\";\nimport { useSelector } from \"react-redux\";\nimport { MinusIcon } from \"@chakra-ui/icons\";\n\nexport default function BookmarksIndexItem({movieData}){\n    const dispatch = useDispatch()\n    const bookmarks = useSelector(state => state.bookmarks)\n\n    const handleBookmarkRemoval = (e) => {\n        e.preventDefault()\n        dispatch(removeBookmark(e.target.id))\n        \n        \n    }\n    return (\n        <>\n        {movieData && (\n       <Card\n       direction={{ base: 'column', sm: 'row' }}\n       overflow='hidden'\n       variant='outline'\n     >\n   <Image src={movieData.Poster} objectFit='scale-down' justifyContent=\"center\"/>\n\n     \n       <Stack>\n         <CardBody>\n           <Heading size='md'>{movieData.Title}</Heading>\n     \n           <Text py='2'>\n             {movieData.Plot}\n           </Text>\n           <Flex justifyContent=\"space-between\">\n                  <Tag colorScheme=\"teal\">{movieData.Year}</Tag>\n                  <Tag colorScheme=\"teal\">{movieData.Runtime}</Tag>\n                  <Tag colorScheme=\"teal\">IMDB Rating: {movieData.imdbRating}</Tag>\n                  </Flex>\n         </CardBody>\n     \n         <CardFooter>\n         <Button leftIcon={<MinusIcon/>} colorScheme=\"red\" id={movieData.imdbID} onClick={handleBookmarkRemoval}>\n             Remove Bookmark\n           </Button>\n         </CardFooter>\n       </Stack>\n     </Card>\n\n        )}\n        </>\n    )\n    \n\n}","/home/michael/MovieNightJS/movie_night_js/components/BookmarksIndex/index.js",["89","90","91","92","93","94","95","96","97","98","99","100"],[],"import React from \"react\"\nimport { AddIcon} from '@chakra-ui/icons'\n\nimport { useDisclosure, RadioGroup,DrawerCloseButton, Button, Tag, Stack, Radio, Drawer, DrawerOverlay, DrawerContent, DrawerBody, DrawerHeader, CloseButton, Flex } from \"@chakra-ui/react\"\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport bookmarksReducer, { loadBookmarks } from \"../../store/bookmarks\";\nimport MoviesIndexItem from \"../MovieIndexItem\";\nimport BookmarksIndexItem from \"../BookmarkIndexItem\";\n\nexport default function BookmarksIndex(){\nconst { isOpen, onOpen, onClose } = useDisclosure()\nconst [placement, setPlacement] = React.useState('right')\nconst localBookmarks = useSelector(state => state.bookmarks)\nconst [currentBookmarks, setCurrentBookmarks] = useState([])\nconst dispatch = useDispatch()\n\nuseEffect(() => {\n  let data = loadBookmarks()\n  setCurrentBookmarks(data)\n},[])\nuseEffect(() => {\n  if(currentBookmarks !== localBookmarks){\n    const b = loadBookmarks()\n    setCurrentBookmarks(b)\n  }\n},[localBookmarks])\n\n\n\nif(currentBookmarks){\nreturn (\n  <>\n\n  \n    <Button onClick={onOpen} size=\"md\" style={{\"position\":\"sticky\", \"top\":50, \"width\":\"fit-content\", \"height\":\"100%\", \"zIndex\":2}} variant='solid' colorScheme=\"teal\">\n        Edit Bookmarks\n    </Button>\n    <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen} size=\"lg\">\n\n      <DrawerOverlay />\n      <DrawerContent>\n  \n      <DrawerHeader borderBottomWidth='1px'>\n      <Flex justifyContent=\"space-between\">\n          <div>Bookmarked Movies</div> \n          <DrawerCloseButton></DrawerCloseButton>\n      </Flex>\n        </DrawerHeader>\n\n\n        <DrawerBody>\n\n            <>\n\n              { currentBookmarks.length > 0 ?  currentBookmarks.map((bookmark,i)=> <BookmarksIndexItem key={i} movieData={bookmark}></BookmarksIndexItem>) : <p>No bookmarks saved yet!</p>}\n\n            </>\n\n          \n\n        </DrawerBody>\n      </DrawerContent>\n    </Drawer>\n  </>\n)\n}\n}","/home/michael/MovieNightJS/movie_night_js/components/HeaderBar/index.js",[],[],"/home/michael/MovieNightJS/movie_night_js/components/MovieIndexItem/index.js",["101","102","103","104","105","106","107","108","109","110","111"],[],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {Card, Flex, Tag, Tab, TabList, Tabs, TabIndicator, TabPanels , TabPanel, Stack, Heading, AspectRatio, CardBody, CardFooter, Button, Image, CardHeader, Text,Box,  VStack, StackDivider, Container, Divider, Center} from \"@chakra-ui/react\"\nimport { addBookmarkToStorage, loadBookmarks } from \"../../store/bookmarks\";\nimport { useDisclosure } from '@chakra-ui/react'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeBookmark } from \"../../store/bookmarks\";\nimport { AddIcon, MinusIcon } from \"@chakra-ui/icons\";\n\n\nexport default function MoviesIndexItem({movieData}){\n    const detailKeys = Object.keys(movieData).slice(0,9)\n    const [currentBookmarks, setCurrentBookmarks] = useState([])\n    const bookmarks = useSelector(state => state.bookmarks)\n\n    useState(() => {\n      if(bookmarks.current.length === 0 || bookmarks.current.length != currentBookmarks.length){\n        let newData = loadBookmarks()\n        setCurrentBookmarks(newData)\n\n      }\n    },[bookmarks])\n\n    const dispatch = useDispatch()\n\n\n\n    const handleAddBookmark = (e, info) => {\n      e.preventDefault()\n      dispatch(addBookmarkToStorage(info))\n      let newBookMarks = loadBookmarks()\n      setCurrentBookmarks(newBookMarks)\n      \n      return bookmarks\n      }\n\n\n      const handleBookmarkRemoval = (e) => {\n        e.preventDefault()\n        dispatch(removeBookmark(e.target.id))\n        let newBookMarks = loadBookmarks()\n        setCurrentBookmarks(newBookMarks)\n        \n    }\n    \n    return (\n        <>\n        {movieData && bookmarks.current && (\n       \n          <Container >\n        \n                <Card>\n                  <CardHeader>\n                  <Center>\n                  <Image src={movieData.Poster} objectFit='fill' justifyContent=\"center\"/>\n                  </Center>\n                  <Center>\n                  <Heading>{movieData.Title}</Heading>\n                \n                  </Center>\n                  <Center>\n                    <Flex justifyContent=\"space-between\">\n                    {movieData.Genre.split(\",\").map(genre => <Tag color>{genre.replace(\",\",\"\")}</Tag>)}\n                    </Flex>\n                \n                  </Center>\n       \n              \n                  <Center height=\"50px\">\n                  <Divider orientation=\"horizontal\" ></Divider>\n                  </Center>\n               \n                  <Flex justifyContent=\"space-between\">\n                  <Tag colorScheme=\"teal\">{movieData.Year}</Tag>\n                  <Tag colorScheme=\"teal\">{movieData.Runtime}</Tag>\n                  <Tag colorScheme=\"teal\">IMDB Rating: {movieData.imdbRating}</Tag>\n                  </Flex>\n\n                  </CardHeader>\n                  <CardBody>\n                  <Tabs position=\"relative\" variant=\"unstyled\">\n    <TabList>\n      <Tab>Overview</Tab>\n      <Tab>Additional Info</Tab>\n      \n    </TabList>\n    <TabIndicator\n      mt=\"-1.5px\"\n      height=\"2px\"\n      bg=\"blue.500\"\n      borderRadius=\"1px\"\n    />\n    <TabPanels>\n      <TabPanel>\n            <Text>{movieData.Plot}</Text>\n      </TabPanel>\n      <TabPanel>\n          {detailKeys.map(key => (<>\n        <Flex justifyContent=\"space-between\">\n   \n            <Text as=\"u\">{key}: </Text>\n            <Text>{movieData[key]}</Text>\n          </Flex></>))}\n      </TabPanel>\n    </TabPanels>\n  </Tabs>\n  <Center>\n\n\n            {currentBookmarks.filter(movie => movie.imdbID === movieData.imdbID).length === 0 ?   \n            <Button colorScheme=\"green\"  leftIcon={<AddIcon />} id={movieData.imdbID} onClick={(e) => handleAddBookmark(e, movieData)}>Add to Bookmarks</Button> : \n            null }\n\n         </Center>\n                  </CardBody>\n                </Card>\n \n          </Container>\n\n        )}\n        </>\n    )\n    \n}","/home/michael/MovieNightJS/movie_night_js/components/MoviesIndex/index.js",["112","113","114","115","116","117","118","119"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Input, Stack, Container, Box, SimpleGrid, VStack, StackDivider, Flex, Center, Text} from \"@chakra-ui/react\";\nimport Searchbar from \"../Searchbar\";\nimport { useSelector } from \"react-redux\";\nimport MoviesIndexItem from \"../MovieIndexItem\";\n\nimport styles from \"./movieindex.module.css\"\n\nexport default function MoviesIndex(){\n    const stateMovies = useSelector(state => state.movies)\n    const [movies, setMovies] = useState()\n\n    useEffect(() => {\n        if(Object.values(stateMovies).length > 0){\n            setMovies(stateMovies.movies)\n        }\n    },[stateMovies])\n\n    useEffect(() => {\n        console.log(\"movies\", movies)\n    },[movies])\n\n\nif(movies !== undefined){\n    return (\n        <>\n\n \n            {movies  && \n        \n<SimpleGrid columns={4} pacingX='10px' spacingY='20px' className={styles.movies_index_container} >\n    {Object.values(movies).map((movie,i) => (<MoviesIndexItem movieData={movie} key={i}></MoviesIndexItem>))}\n      </SimpleGrid>\n                \n    \n              \n            }\n       \n\n\n        </>\n    )\n}else{\n    return (\n  \n        <Center>\n            <Text color=\"white\" size=\"lg\" fontSize=\"50px\">Enter a Movie Title Above to Begin Search</Text>\n        </Center>\n\n    )\n}\n\n\n}","/home/michael/MovieNightJS/movie_night_js/components/Searchbar/index.js",["120","121","122","123","124","125","126","127","128"],[],"import React from \"react\";\nimport {useState, useEffect} from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Input, Stack, Spacer, Container, Box, Button, Flex, ButtonGroup, Heading } from \"@chakra-ui/react\";\nimport style from \"./searchbar.module.css\"\nimport MoviesIndex from \"../MoviesIndex\";\nimport { addMovies } from \"../../store/movies\";\n\n\nexport default function Searchbar(){\n    const [title, setTitle] = useState(\"\")\n    const [data, setData] = useState()\n    const [searchResults, setSearchResults] = useState()\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(searchResults !== undefined){\n            dispatch(addMovies(searchResults))\n        }\n    },[searchResults])\n\n    const getData = async () => {\n        if(title.length === 0){\n            alert(\"Please enter a movie title\")\n            return null\n        }\n        try{\n         \n            const params = new URLSearchParams({s: title, r: \"json\"})\n            \n            const req = await fetch(`api/search/`, {\n                method: \"POST\", \n                body: JSON.stringify({\"title\":title}),\n            })\n            const data = await req.json()\n            setSearchResults(data.filter(movie => movie.Type === \"movie\"))\n        }catch(error){\n            alert(\"sorry no search results found! Try another title\")\n        }\n    }\n\n    return (\n        <>\n\n\n  <Flex color=\"white\" minWidth='max-content' w=\"500px\" bg=\"transparent\" alignItems='center' gap='2' justifyContent=\"center\">\n  <Box p='2' >\n    <Heading size='lg'>\n        <Input placeholder=\"Search for Movie\" variant=\"outline\" w=\"500px\" size=\"lg\" onChange={(e) => setTitle(e.target.value)}></Input>\n    </Heading>\n  </Box>\n  <Spacer />\n  <ButtonGroup gap='2'>\n    <Button colorScheme='teal' onClick={getData}>Search</Button>\n\n  </ButtonGroup>\n</Flex>\n\n\n\n</>\n    )\n\n \n\n\n}",{"ruleId":"129","severity":1,"message":"130","line":23,"column":23,"nodeType":"131","messageId":"132","endLine":23,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":6,"column":10,"nodeType":"135","messageId":"136","endLine":6,"endColumn":21},{"ruleId":"133","severity":1,"message":"137","line":4,"column":19,"nodeType":"135","messageId":"136","endLine":4,"endColumn":28},{"ruleId":"133","severity":1,"message":"138","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":23},{"ruleId":"133","severity":1,"message":"139","line":6,"column":11,"nodeType":"135","messageId":"136","endLine":6,"endColumn":17},{"ruleId":"133","severity":1,"message":"140","line":6,"column":19,"nodeType":"135","messageId":"136","endLine":6,"endColumn":23},{"ruleId":"133","severity":1,"message":"141","line":6,"column":25,"nodeType":"135","messageId":"136","endLine":6,"endColumn":33},{"ruleId":"133","severity":1,"message":"142","line":6,"column":35,"nodeType":"135","messageId":"136","endLine":6,"endColumn":39},{"ruleId":"133","severity":1,"message":"143","line":6,"column":41,"nodeType":"135","messageId":"136","endLine":6,"endColumn":44},{"ruleId":"133","severity":1,"message":"144","line":6,"column":52,"nodeType":"135","messageId":"136","endLine":6,"endColumn":61},{"ruleId":"133","severity":1,"message":"145","line":7,"column":8,"nodeType":"135","messageId":"136","endLine":7,"endColumn":17},{"ruleId":"133","severity":1,"message":"146","line":9,"column":8,"nodeType":"135","messageId":"136","endLine":9,"endColumn":22},{"ruleId":"133","severity":1,"message":"147","line":11,"column":10,"nodeType":"135","messageId":"136","endLine":11,"endColumn":23},{"ruleId":"133","severity":1,"message":"148","line":14,"column":10,"nodeType":"135","messageId":"136","endLine":14,"endColumn":23},{"ruleId":"133","severity":1,"message":"149","line":14,"column":25,"nodeType":"135","messageId":"136","endLine":14,"endColumn":41},{"ruleId":"133","severity":1,"message":"150","line":17,"column":10,"nodeType":"135","messageId":"136","endLine":17,"endColumn":25},{"ruleId":"133","severity":1,"message":"151","line":17,"column":28,"nodeType":"135","messageId":"136","endLine":17,"endColumn":46},{"ruleId":"133","severity":1,"message":"152","line":2,"column":9,"nodeType":"135","messageId":"136","endLine":2,"endColumn":17},{"ruleId":"133","severity":1,"message":"137","line":2,"column":18,"nodeType":"135","messageId":"136","endLine":2,"endColumn":27},{"ruleId":"133","severity":1,"message":"153","line":3,"column":26,"nodeType":"135","messageId":"136","endLine":3,"endColumn":29},{"ruleId":"133","severity":1,"message":"154","line":3,"column":31,"nodeType":"135","messageId":"136","endLine":3,"endColumn":38},{"ruleId":"133","severity":1,"message":"155","line":3,"column":40,"nodeType":"135","messageId":"136","endLine":3,"endColumn":44},{"ruleId":"133","severity":1,"message":"156","line":3,"column":46,"nodeType":"135","messageId":"136","endLine":3,"endColumn":58},{"ruleId":"133","severity":1,"message":"157","line":3,"column":60,"nodeType":"135","messageId":"136","endLine":3,"endColumn":69},{"ruleId":"133","severity":1,"message":"158","line":3,"column":72,"nodeType":"135","messageId":"136","endLine":3,"endColumn":80},{"ruleId":"133","severity":1,"message":"159","line":3,"column":98,"nodeType":"135","messageId":"136","endLine":3,"endColumn":109},{"ruleId":"133","severity":1,"message":"160","line":3,"column":148,"nodeType":"135","messageId":"136","endLine":3,"endColumn":158},{"ruleId":"133","severity":1,"message":"143","line":3,"column":165,"nodeType":"135","messageId":"136","endLine":3,"endColumn":168},{"ruleId":"133","severity":1,"message":"161","line":3,"column":171,"nodeType":"135","messageId":"136","endLine":3,"endColumn":177},{"ruleId":"133","severity":1,"message":"162","line":3,"column":179,"nodeType":"135","messageId":"136","endLine":3,"endColumn":191},{"ruleId":"133","severity":1,"message":"144","line":3,"column":193,"nodeType":"135","messageId":"136","endLine":3,"endColumn":202},{"ruleId":"133","severity":1,"message":"163","line":3,"column":204,"nodeType":"135","messageId":"136","endLine":3,"endColumn":211},{"ruleId":"133","severity":1,"message":"164","line":3,"column":213,"nodeType":"135","messageId":"136","endLine":3,"endColumn":219},{"ruleId":"133","severity":1,"message":"165","line":11,"column":11,"nodeType":"135","messageId":"136","endLine":11,"endColumn":20},{"ruleId":"133","severity":1,"message":"166","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":17},{"ruleId":"133","severity":1,"message":"167","line":4,"column":25,"nodeType":"135","messageId":"136","endLine":4,"endColumn":35},{"ruleId":"133","severity":1,"message":"168","line":4,"column":63,"nodeType":"135","messageId":"136","endLine":4,"endColumn":66},{"ruleId":"133","severity":1,"message":"169","line":4,"column":68,"nodeType":"135","messageId":"136","endLine":4,"endColumn":73},{"ruleId":"133","severity":1,"message":"170","line":4,"column":75,"nodeType":"135","messageId":"136","endLine":4,"endColumn":80},{"ruleId":"133","severity":1,"message":"171","line":4,"column":146,"nodeType":"135","messageId":"136","endLine":4,"endColumn":157},{"ruleId":"133","severity":1,"message":"172","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":24},{"ruleId":"133","severity":1,"message":"138","line":9,"column":8,"nodeType":"135","messageId":"136","endLine":9,"endColumn":23},{"ruleId":"133","severity":1,"message":"173","line":14,"column":8,"nodeType":"135","messageId":"136","endLine":14,"endColumn":17},{"ruleId":"133","severity":1,"message":"174","line":14,"column":19,"nodeType":"135","messageId":"136","endLine":14,"endColumn":31},{"ruleId":"133","severity":1,"message":"175","line":17,"column":7,"nodeType":"135","messageId":"136","endLine":17,"endColumn":15},{"ruleId":"176","severity":1,"message":"177","line":28,"column":3,"nodeType":"178","endLine":28,"endColumn":19,"suggestions":"179"},{"ruleId":"133","severity":1,"message":"137","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":19},{"ruleId":"133","severity":1,"message":"169","line":3,"column":82,"nodeType":"135","messageId":"136","endLine":3,"endColumn":87},{"ruleId":"133","severity":1,"message":"159","line":3,"column":98,"nodeType":"135","messageId":"136","endLine":3,"endColumn":109},{"ruleId":"133","severity":1,"message":"180","line":3,"column":121,"nodeType":"135","messageId":"136","endLine":3,"endColumn":131},{"ruleId":"133","severity":1,"message":"143","line":3,"column":165,"nodeType":"135","messageId":"136","endLine":3,"endColumn":168},{"ruleId":"133","severity":1,"message":"161","line":3,"column":171,"nodeType":"135","messageId":"136","endLine":3,"endColumn":177},{"ruleId":"133","severity":1,"message":"162","line":3,"column":179,"nodeType":"135","messageId":"136","endLine":3,"endColumn":191},{"ruleId":"133","severity":1,"message":"181","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":23},{"ruleId":"133","severity":1,"message":"182","line":8,"column":19,"nodeType":"135","messageId":"136","endLine":8,"endColumn":28},{"ruleId":"129","severity":1,"message":"183","line":17,"column":69,"nodeType":"131","messageId":"132","endLine":17,"endColumn":71},{"ruleId":"133","severity":1,"message":"184","line":38,"column":13,"nodeType":"135","messageId":"136","endLine":38,"endColumn":34},{"ruleId":"133","severity":1,"message":"185","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":15},{"ruleId":"133","severity":1,"message":"169","line":3,"column":17,"nodeType":"135","messageId":"136","endLine":3,"endColumn":22},{"ruleId":"133","severity":1,"message":"144","line":3,"column":24,"nodeType":"135","messageId":"136","endLine":3,"endColumn":33},{"ruleId":"133","severity":1,"message":"143","line":3,"column":35,"nodeType":"135","messageId":"136","endLine":3,"endColumn":38},{"ruleId":"133","severity":1,"message":"161","line":3,"column":52,"nodeType":"135","messageId":"136","endLine":3,"endColumn":58},{"ruleId":"133","severity":1,"message":"162","line":3,"column":60,"nodeType":"135","messageId":"136","endLine":3,"endColumn":72},{"ruleId":"133","severity":1,"message":"186","line":3,"column":74,"nodeType":"135","messageId":"136","endLine":3,"endColumn":78},{"ruleId":"133","severity":1,"message":"145","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":17},{"ruleId":"133","severity":1,"message":"187","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":21},{"ruleId":"133","severity":1,"message":"169","line":4,"column":17,"nodeType":"135","messageId":"136","endLine":4,"endColumn":22},{"ruleId":"133","severity":1,"message":"144","line":4,"column":32,"nodeType":"135","messageId":"136","endLine":4,"endColumn":41},{"ruleId":"133","severity":1,"message":"188","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":13},{"ruleId":"133","severity":1,"message":"189","line":6,"column":8,"nodeType":"135","messageId":"136","endLine":6,"endColumn":19},{"ruleId":"133","severity":1,"message":"190","line":12,"column":12,"nodeType":"135","messageId":"136","endLine":12,"endColumn":16},{"ruleId":"133","severity":1,"message":"191","line":12,"column":18,"nodeType":"135","messageId":"136","endLine":12,"endColumn":25},{"ruleId":"176","severity":1,"message":"192","line":21,"column":7,"nodeType":"178","endLine":21,"endColumn":22,"suggestions":"193"},{"ruleId":"133","severity":1,"message":"194","line":30,"column":19,"nodeType":"135","messageId":"136","endLine":30,"endColumn":25},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'MoviesIndexItem' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'GridItem' is defined but never used.","'Text' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'Searchbar' is defined but never used.","'BookmarksIndex' is defined but never used.","'loadBookmarks' is defined but never used.","'showBookmarks' is assigned a value but never used.","'setShowBookmarks' is assigned a value but never used.","'latestBookmarks' is assigned a value but never used.","'setLatestBookmarks' is assigned a value but never used.","'useState' is defined but never used.","'Tab' is defined but never used.","'TabList' is defined but never used.","'Tabs' is defined but never used.","'TabIndicator' is defined but never used.","'TabPanels' is defined but never used.","'TabPanel' is defined but never used.","'AspectRatio' is defined but never used.","'CardHeader' is defined but never used.","'VStack' is defined but never used.","'StackDivider' is defined but never used.","'Divider' is defined but never used.","'Center' is defined but never used.","'bookmarks' is assigned a value but never used.","'AddIcon' is defined but never used.","'RadioGroup' is defined but never used.","'Tag' is defined but never used.","'Stack' is defined but never used.","'Radio' is defined but never used.","'CloseButton' is defined but never used.","'bookmarksReducer' is defined but never used.","'placement' is assigned a value but never used.","'setPlacement' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentBookmarks'. Either include it or remove the dependency array.","ArrayExpression",["195"],"'CardFooter' is defined but never used.","'useDisclosure' is defined but never used.","'MinusIcon' is defined but never used.","Expected '!==' and instead saw '!='.","'handleBookmarkRemoval' is assigned a value but never used.","'Input' is defined but never used.","'Flex' is defined but never used.","'useSelector' is defined but never used.","'style' is defined but never used.","'MoviesIndex' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["196"],"'params' is assigned a value but never used.",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [currentBookmarks, localBookmarks]",{"range":"201","text":"202"},"Update the dependencies array to be: [dispatch, searchResults]",{"range":"203","text":"204"},[1049,1065],"[currentBookmarks, localBookmarks]",[708,723],"[dispatch, searchResults]"]