"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/search";
exports.ids = ["pages/api/search"];
exports.modules = {

/***/ "(api)/./pages/api/search.js":
/*!*****************************!*\
  !*** ./pages/api/search.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n//data fetch api here with getSer\nasync function handler(req, res) {\n    const baseUrl = process.env.REACT_APP_API_BASE;\n    const title = JSON.parse(req.body).title;\n    const query = `?s=${title.toLowerCase().split(\" \").join(\"%20\")}&r=json`;\n    const url = `${baseUrl}${query}`;\n    console.log(url);\n    const options = {\n        method: \"GET\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            \"X-RapidAPI-Key\": process.env.REACT_APP_API_KEY,\n            \"X-RapidAPI-Host\": process.env.REACT_APP_API_HOST\n        }\n    };\n    const reqData = await fetch(url, options) //initial fetch to get IMDB ids for possible results\n    ;\n    if (reqData.status == 200) {\n        const data = await reqData.json();\n        return requestIMDB(res, data);\n    } else {\n        console.log(\"request error\");\n    }\n}\nasync function requestIMDB(responseObject, moviesJSONData) {\n    const baseUrl = process.env.REACT_APP_API_BASE;\n    const movieURLs = moviesJSONData.Search.map((movie)=>`${baseUrl}?r=json&i=${movie.imdbID}`);\n    const options = {\n        method: \"GET\",\n        headers: {\n            \"content-type\": \"application/octet-stream\",\n            \"X-RapidAPI-Key\": process.env.REACT_APP_API_KEY,\n            \"X-RapidAPI-Host\": process.env.REACT_APP_API_HOST\n        }\n    };\n    const movieDetails = await Promise.all(await movieURLs.map(async (url)=>{\n        const req = await fetch(url, options);\n        const data = await req.json();\n        return data;\n    }));\n    return responseObject.status(200).json(movieDetails);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvc2VhcmNoLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpQ0FBaUM7QUFLaEIsZUFBZUEsUUFBUUMsR0FBRyxFQUFFQyxHQUFHLEVBQUM7SUFDN0MsTUFBTUMsVUFBVUMsUUFBUUMsR0FBRyxDQUFDQyxrQkFBa0I7SUFDOUMsTUFBTUMsUUFBUUMsS0FBS0MsS0FBSyxDQUFDUixJQUFJUyxJQUFJLEVBQUVILEtBQUs7SUFDeEMsTUFBTUksUUFBUSxDQUFDLEdBQUcsRUFBRUosTUFBTUssV0FBVyxHQUFHQyxLQUFLLENBQUMsS0FBS0MsSUFBSSxDQUFDLE9BQU8sT0FBTyxDQUFDO0lBQ3ZFLE1BQU1DLE1BQU0sQ0FBQyxFQUFFWixRQUFRLEVBQUVRLE1BQU0sQ0FBQztJQUNoQ0ssUUFBUUMsR0FBRyxDQUFDRjtJQUNaLE1BQU1HLFVBQVU7UUFDZEMsUUFBUTtRQUNSQyxTQUFTO1lBQ1AsZ0JBQWdCO1lBQ2hCLGtCQUFrQmhCLFFBQVFDLEdBQUcsQ0FBQ2dCLGlCQUFpQjtZQUMvQyxtQkFBbUJqQixRQUFRQyxHQUFHLENBQUNpQixrQkFBa0I7UUFDbkQ7SUFDRjtJQUVBLE1BQU1DLFVBQVUsTUFBTUMsTUFBTVQsS0FBS0csU0FBUyxvREFBb0Q7O0lBRTlGLElBQUdLLFFBQVFFLE1BQU0sSUFBSSxLQUFJO1FBQ2YsTUFBTUMsT0FBTyxNQUFNSCxRQUFRSSxJQUFJO1FBQy9CLE9BQU9DLFlBQVkxQixLQUFLd0I7SUFDaEMsT0FBSztRQUNIVixRQUFRQyxHQUFHLENBQUM7SUFDZCxDQUFDO0FBRUwsQ0FBQztBQUVELGVBQWVXLFlBQVlDLGNBQWMsRUFBRUMsY0FBYyxFQUFDO0lBQ3hELE1BQU0zQixVQUFVQyxRQUFRQyxHQUFHLENBQUNDLGtCQUFrQjtJQUM5QyxNQUFNeUIsWUFBWUQsZUFBZUUsTUFBTSxDQUFDQyxHQUFHLENBQUNDLENBQUFBLFFBQVMsQ0FBQyxFQUFFL0IsUUFBUSxVQUFVLEVBQUUrQixNQUFNQyxNQUFNLENBQUMsQ0FBQztJQUMxRixNQUFNakIsVUFBVTtRQUNkQyxRQUFRO1FBQ1JDLFNBQVM7WUFDUCxnQkFBZ0I7WUFDaEIsa0JBQWtCaEIsUUFBUUMsR0FBRyxDQUFDZ0IsaUJBQWlCO1lBQy9DLG1CQUFtQmpCLFFBQVFDLEdBQUcsQ0FBQ2lCLGtCQUFrQjtRQUNuRDtJQUNGO0lBRUEsTUFBTWMsZUFBZSxNQUFNQyxRQUFRQyxHQUFHLENBQUMsTUFBTVAsVUFBVUUsR0FBRyxDQUFDLE9BQU1sQixNQUFPO1FBQ3RFLE1BQU1kLE1BQU0sTUFBTXVCLE1BQU1ULEtBQUtHO1FBQzdCLE1BQU1RLE9BQU8sTUFBTXpCLElBQUkwQixJQUFJO1FBRTNCLE9BQU9EO0lBQ1Q7SUFHQSxPQUFPRyxlQUFlSixNQUFNLENBQUMsS0FBS0UsSUFBSSxDQUFDUztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL21vdmllX25pZ2h0X2pzLy4vcGFnZXMvYXBpL3NlYXJjaC5qcz81ZDNhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vZGF0YSBmZXRjaCBhcGkgaGVyZSB3aXRoIGdldFNlclxuXG5cblxuXG4gIGV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpe1xuICAgIGNvbnN0IGJhc2VVcmwgPSBwcm9jZXNzLmVudi5SRUFDVF9BUFBfQVBJX0JBU0VcbiAgICBjb25zdCB0aXRsZSA9IEpTT04ucGFyc2UocmVxLmJvZHkpLnRpdGxlXG4gICAgY29uc3QgcXVlcnkgPSBgP3M9JHt0aXRsZS50b0xvd2VyQ2FzZSgpLnNwbGl0KFwiIFwiKS5qb2luKFwiJTIwXCIpfSZyPWpzb25gXG4gICAgY29uc3QgdXJsID0gYCR7YmFzZVVybH0ke3F1ZXJ5fWBcbiAgICBjb25zb2xlLmxvZyh1cmwpXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgXCJjb250ZW50LXR5cGVcIjogJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScsXG4gICAgICAgIFwiWC1SYXBpZEFQSS1LZXlcIjogcHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX0FQSV9LRVksXG4gICAgICAgIFwiWC1SYXBpZEFQSS1Ib3N0XCI6IHByb2Nlc3MuZW52LlJFQUNUX0FQUF9BUElfSE9TVFxuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHJlcURhdGEgPSBhd2FpdCBmZXRjaCh1cmwsIG9wdGlvbnMpIC8vaW5pdGlhbCBmZXRjaCB0byBnZXQgSU1EQiBpZHMgZm9yIHBvc3NpYmxlIHJlc3VsdHNcblxuICAgIGlmKHJlcURhdGEuc3RhdHVzID09IDIwMCl7XG4gICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXFEYXRhLmpzb24oKVxuICAgICAgICAgICAgICByZXR1cm4gcmVxdWVzdElNREIocmVzLCBkYXRhKVxuICAgICAgfWVsc2V7XG4gICAgICAgIGNvbnNvbGUubG9nKFwicmVxdWVzdCBlcnJvclwiKVxuICAgICAgfVxuXG4gIH1cblxuICBhc3luYyBmdW5jdGlvbiByZXF1ZXN0SU1EQihyZXNwb25zZU9iamVjdCwgbW92aWVzSlNPTkRhdGEpe1xuICAgIGNvbnN0IGJhc2VVcmwgPSBwcm9jZXNzLmVudi5SRUFDVF9BUFBfQVBJX0JBU0VcbiAgICBjb25zdCBtb3ZpZVVSTHMgPSBtb3ZpZXNKU09ORGF0YS5TZWFyY2gubWFwKG1vdmllID0+IGAke2Jhc2VVcmx9P3I9anNvbiZpPSR7bW92aWUuaW1kYklEfWApXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgXCJjb250ZW50LXR5cGVcIjogJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScsXG4gICAgICAgIFwiWC1SYXBpZEFQSS1LZXlcIjogcHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX0FQSV9LRVksXG4gICAgICAgIFwiWC1SYXBpZEFQSS1Ib3N0XCI6IHByb2Nlc3MuZW52LlJFQUNUX0FQUF9BUElfSE9TVFxuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBjb25zdCBtb3ZpZURldGFpbHMgPSBhd2FpdCBQcm9taXNlLmFsbChhd2FpdCBtb3ZpZVVSTHMubWFwKGFzeW5jIHVybCA9PiB7XG4gICAgICBjb25zdCByZXEgPSBhd2FpdCBmZXRjaCh1cmwsIG9wdGlvbnMpXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVxLmpzb24oKVxuXG4gICAgICByZXR1cm4gZGF0YVxuICAgIH0pKTtcblxuXG4gICAgcmV0dXJuIHJlc3BvbnNlT2JqZWN0LnN0YXR1cygyMDApLmpzb24obW92aWVEZXRhaWxzKVxuICB9XG4gICJdLCJuYW1lcyI6WyJoYW5kbGVyIiwicmVxIiwicmVzIiwiYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJSRUFDVF9BUFBfQVBJX0JBU0UiLCJ0aXRsZSIsIkpTT04iLCJwYXJzZSIsImJvZHkiLCJxdWVyeSIsInRvTG93ZXJDYXNlIiwic3BsaXQiLCJqb2luIiwidXJsIiwiY29uc29sZSIsImxvZyIsIm9wdGlvbnMiLCJtZXRob2QiLCJoZWFkZXJzIiwiUkVBQ1RfQVBQX0FQSV9LRVkiLCJSRUFDVF9BUFBfQVBJX0hPU1QiLCJyZXFEYXRhIiwiZmV0Y2giLCJzdGF0dXMiLCJkYXRhIiwianNvbiIsInJlcXVlc3RJTURCIiwicmVzcG9uc2VPYmplY3QiLCJtb3ZpZXNKU09ORGF0YSIsIm1vdmllVVJMcyIsIlNlYXJjaCIsIm1hcCIsIm1vdmllIiwiaW1kYklEIiwibW92aWVEZXRhaWxzIiwiUHJvbWlzZSIsImFsbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/search.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/search.js"));
module.exports = __webpack_exports__;

})();